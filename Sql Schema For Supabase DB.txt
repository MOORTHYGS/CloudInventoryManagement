-- WARNING: This schema is for context only and is not meant to be run.
-- Table order and constraints may not be valid for execution.

CREATE TABLE public.audit_logs (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  user_id uuid,
  action text NOT NULL,
  table_name text,
  record_id uuid,
  timestamp timestamp without time zone DEFAULT now(),
  details jsonb,
  CONSTRAINT audit_logs_pkey PRIMARY KEY (id),
  CONSTRAINT audit_logs_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT audit_logs_user_id_fkey FOREIGN KEY (user_id) REFERENCES public.users(id)
);
CREATE TABLE public.categories (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  name text NOT NULL,
  description text,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT categories_pkey PRIMARY KEY (id),
  CONSTRAINT categories_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.customers (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL,
  contact_info jsonb,
  created_at timestamp without time zone DEFAULT now(),
  user_name text,
  password text,
  old_password text,
  updated_at timestamp with time zone DEFAULT (now() AT TIME ZONE 'utc'::text),
  CONSTRAINT customers_pkey PRIMARY KEY (id)
);
CREATE TABLE public.inventory_items (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  category_id uuid,
  sku_id smallint NOT NULL,
  name text NOT NULL,
  description text,
  unit text DEFAULT 'pcs'::text,
  price numeric DEFAULT 0,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT inventory_items_pkey PRIMARY KEY (id),
  CONSTRAINT inventory_items_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT inventory_items_category_id_fkey FOREIGN KEY (category_id) REFERENCES public.categories(id),
  CONSTRAINT inventory_items_sku_id_fkey FOREIGN KEY (sku_id) REFERENCES public.sku(sku_id)
);
CREATE TABLE public.inventory_stock (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  inventory_id uuid NOT NULL,
  warehouse_id uuid NOT NULL,
  quantity integer DEFAULT 0,
  reorder_level integer DEFAULT 0,
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT inventory_stock_pkey PRIMARY KEY (id),
  CONSTRAINT inventory_stock_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT inventory_stock_inventory_id_fkey FOREIGN KEY (inventory_id) REFERENCES public.inventory_items(id),
  CONSTRAINT inventory_stock_warehouse_id_fkey FOREIGN KEY (warehouse_id) REFERENCES public.warehouses(id)
);
CREATE TABLE public.payments (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  subscription_id uuid,
  amount numeric NOT NULL,
  method text DEFAULT 'razorpay'::text CHECK (method = ANY (ARRAY['razorpay'::text, 'stripe'::text, 'paypal'::text, 'cash'::text])),
  status text DEFAULT 'pending'::text CHECK (status = ANY (ARRAY['success'::text, 'failed'::text, 'pending'::text])),
  transaction_id text,
  paid_at timestamp without time zone DEFAULT now(),
  CONSTRAINT payments_pkey PRIMARY KEY (id),
  CONSTRAINT payments_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT payments_subscription_id_fkey FOREIGN KEY (subscription_id) REFERENCES public.subscriptions(id)
);
CREATE TABLE public.plans (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL,
  price numeric NOT NULL,
  billing_cycle text CHECK (billing_cycle = ANY (ARRAY['monthly'::text, 'yearly'::text])),
  features jsonb,
  CONSTRAINT plans_pkey PRIMARY KEY (id)
);
CREATE TABLE public.settings (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  key text NOT NULL,
  value jsonb,
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT settings_pkey PRIMARY KEY (id),
  CONSTRAINT settings_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.sku (
  id bigint GENERATED ALWAYS AS IDENTITY NOT NULL,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  tenant_id uuid NOT NULL,
  sku_id integer GENERATED ALWAYS AS IDENTITY NOT NULL UNIQUE,
  sku_desc text UNIQUE,
  last_edit_at timestamp with time zone DEFAULT now(),
  last_edit_by text,
  CONSTRAINT sku_pkey PRIMARY KEY (tenant_id, id),
  CONSTRAINT sku_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.stock_transfers (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  inventory_id uuid NOT NULL,
  from_warehouse uuid,
  to_warehouse uuid,
  quantity integer NOT NULL,
  transfer_date timestamp without time zone DEFAULT now(),
  created_by uuid,
  status text DEFAULT 'initiated'::text CHECK (status = ANY (ARRAY['initiated'::text, 'completed'::text, 'cancelled'::text])),
  CONSTRAINT stock_transfers_pkey PRIMARY KEY (id),
  CONSTRAINT stock_transfers_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT stock_transfers_inventory_id_fkey FOREIGN KEY (inventory_id) REFERENCES public.inventory_items(id),
  CONSTRAINT stock_transfers_from_warehouse_fkey FOREIGN KEY (from_warehouse) REFERENCES public.warehouses(id),
  CONSTRAINT stock_transfers_to_warehouse_fkey FOREIGN KEY (to_warehouse) REFERENCES public.warehouses(id),
  CONSTRAINT stock_transfers_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.subscriptions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  plan_id uuid NOT NULL,
  status text DEFAULT 'trial'::text CHECK (status = ANY (ARRAY['active'::text, 'expired'::text, 'trial'::text])),
  start_date timestamp without time zone DEFAULT now(),
  end_date timestamp without time zone,
  renewal_date timestamp without time zone,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT subscriptions_pkey PRIMARY KEY (id),
  CONSTRAINT subscriptions_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT subscriptions_plan_id_fkey FOREIGN KEY (plan_id) REFERENCES public.plans(id)
);
CREATE TABLE public.suppliers (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  name text NOT NULL,
  contact_info jsonb,
  created_at timestamp without time zone DEFAULT now(),
  CONSTRAINT suppliers_pkey PRIMARY KEY (id),
  CONSTRAINT suppliers_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.tenants (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  name text NOT NULL,
  domain text,
  status text DEFAULT 'active'::text,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  customer_id uuid NOT NULL,
  CONSTRAINT tenants_pkey PRIMARY KEY (id),
  CONSTRAINT tenants_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id)
);
CREATE TABLE public.transactions (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  inventory_id uuid NOT NULL,
  warehouse_id uuid NOT NULL,
  type text CHECK (type = ANY (ARRAY['IN'::text, 'OUT'::text, 'TRANSFER'::text, 'ADJUST'::text])),
  quantity integer NOT NULL,
  unit_price numeric DEFAULT 0,
  total_price numeric DEFAULT ((quantity)::numeric * unit_price),
  supplier_id uuid,
  customer_id uuid,
  date timestamp without time zone DEFAULT now(),
  note text,
  created_by uuid,
  CONSTRAINT transactions_pkey PRIMARY KEY (id),
  CONSTRAINT transactions_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id),
  CONSTRAINT transactions_inventory_id_fkey FOREIGN KEY (inventory_id) REFERENCES public.inventory_items(id),
  CONSTRAINT transactions_warehouse_id_fkey FOREIGN KEY (warehouse_id) REFERENCES public.warehouses(id),
  CONSTRAINT transactions_supplier_id_fkey FOREIGN KEY (supplier_id) REFERENCES public.suppliers(id),
  CONSTRAINT transactions_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(id),
  CONSTRAINT transactions_created_by_fkey FOREIGN KEY (created_by) REFERENCES public.users(id)
);
CREATE TABLE public.users (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  name text NOT NULL,
  email text NOT NULL,
  password_hash text NOT NULL,
  role text DEFAULT 'Staff'::text CHECK (role = ANY (ARRAY['Admin'::text, 'Manager'::text, 'Staff'::text])),
  status text DEFAULT 'active'::text,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  user_name text,
  CONSTRAINT users_pkey PRIMARY KEY (id),
  CONSTRAINT users_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);
CREATE TABLE public.warehouses (
  id uuid NOT NULL DEFAULT uuid_generate_v4(),
  tenant_id uuid NOT NULL,
  name text NOT NULL,
  code text NOT NULL,
  address jsonb,
  contact_info jsonb,
  created_at timestamp without time zone DEFAULT now(),
  updated_at timestamp without time zone DEFAULT now(),
  CONSTRAINT warehouses_pkey PRIMARY KEY (id),
  CONSTRAINT warehouses_tenant_id_fkey FOREIGN KEY (tenant_id) REFERENCES public.tenants(id)
);



